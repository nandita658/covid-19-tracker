[{"E:\\React\\covid-19-tracker\\src\\index.js":"1","E:\\React\\covid-19-tracker\\src\\App.js":"2","E:\\React\\covid-19-tracker\\src\\reportWebVitals.js":"3","E:\\React\\covid-19-tracker\\src\\Table.js":"4","E:\\React\\covid-19-tracker\\src\\Map.js":"5","E:\\React\\covid-19-tracker\\src\\InfoBox.js":"6","E:\\React\\covid-19-tracker\\src\\util.js":"7","E:\\React\\covid-19-tracker\\src\\LineGraph.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":4749,"mtime":1626178721810,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":496,"mtime":1626175349481,"results":"13","hashOfConfig":"10"},{"size":840,"mtime":1626173699674,"results":"14","hashOfConfig":"10"},{"size":924,"mtime":1626176744843,"results":"15","hashOfConfig":"10"},{"size":1955,"mtime":1626173586340,"results":"16","hashOfConfig":"10"},{"size":2344,"mtime":1626177627816,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8rgayw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\React\\covid-19-tracker\\src\\index.js",[],["36","37"],"E:\\React\\covid-19-tracker\\src\\App.js",["38"],"import { React, useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Table from './Table';\nimport Map from './Map';\n\nimport './App.css';\nimport { data } from 'browserslist';\nimport { prettyPrintStat, sortData } from './util';\nimport \"leaflet/dist/leaflet.css\";\nimport LineGraph from './LineGraph';\n\n\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([])\n  const [casesType, setCasesType] = useState(\"cases\");\n  //https://disease.sh/v3/covid-19/countries\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    })\n  }, [])\n\n  useEffect(() => {\n    //async -> send a request, wait for it, need to do something with info\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then((response) => response.json()).then((data) => {\n        const countries = data.map((country) => ({\n          name: country.country,\n          value: country.countryInfo.iso2,\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n    getCountriesData();\n  }, [countries]);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    //https://disease.sh/v3/covid-19/all\n    //https://disease.sh/v3/covid-19/countries/[countryCode]\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        // console.log([data.countryInfo.lat, data.countryInfo.long]);\n        countryCode === \"worldwide\"\n          ? setMapCenter([34.80746, -40.4796])\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setZoom(4);\n      });\n\n    console.log(countryInfo);\n  };\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        {/* Header */}\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n\n          {/* Title+Select input dropdown field */}\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n              {/* <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            <MenuItem value=\"worldwide\">Option2</MenuItem>\n            <MenuItem value=\"worldwide\">Option 3</MenuItem>\n            <MenuItem value=\"worldwide\">Option 4</MenuItem> */}\n            </Select>\n          </FormControl>\n        </div>\n\n        {/* InfoBox */}\n        <div className=\"app__stats\">\n          {/* Infobox title=\"Coronavirus cases\" */}\n          <InfoBox isRed active={casesType===\"cases\"} onClick={e=>setCasesType('cases')} title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={prettyPrintStat(countryInfo.cases)} />\n          {/* Infobox title=\"Coronavirus recoveries\" */}\n          <InfoBox active={casesType===\"recovered\"} onClick={e=>setCasesType('recovered')} title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={prettyPrintStat(countryInfo.recovered)} />\n          {/* Infobox */}\n          <InfoBox isGrey active={casesType===\"deaths\"} onClick={e=>setCasesType('deaths')} title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={prettyPrintStat(countryInfo.deaths)} />\n        </div>\n\n        {/* Map */}\n        <Map casesType={casesType} countries={mapCountries} center={mapCenter} zoom={zoom} />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3 className=\"app__table__title\">Live Cases by Country</h3>\n          {/* Table */}\n          <Table countries={tableData} />\n          <h3 className=\"app__graph__title\">Worldwide New Statistics of {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\React\\covid-19-tracker\\src\\reportWebVitals.js",[],"E:\\React\\covid-19-tracker\\src\\Table.js",[],"E:\\React\\covid-19-tracker\\src\\Map.js",[],"E:\\React\\covid-19-tracker\\src\\InfoBox.js",[],"E:\\React\\covid-19-tracker\\src\\util.js",[],"E:\\React\\covid-19-tracker\\src\\LineGraph.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":8,"column":10,"nodeType":"45","messageId":"46","endLine":8,"endColumn":14},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]